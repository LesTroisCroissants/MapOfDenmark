plugins {
    id 'application'
    id 'java'
    id 'jacoco'
    id "com.adarshr.test-logger" version "3.1.0"
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group 'gang'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.openjfx:javafx-controls:19.0.0'
    implementation 'org.openjfx:javafx-fxml:19.0.0'
    implementation 'org.openjfx:javafx-base:19.0.0'
}

application {
    mainModule = 'program'
    mainClass = 'program.App'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestCoverageVerification {
    dependsOn test // tests are required to run before generating the report
    violationRules {
        rule {
            limit {
                minimum = 1.0
            }
        }
    }
}


// TODO run config with X gb of ram
tasks.withType(JavaExec).configureEach {
    jvmArgs = ['-Xms512m', '-Xmx10240m']
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType(Test).configureEach {
    systemProperty 'file.encoding', 'UTF-8'
}

tasks.withType(JavaExec).configureEach {
    systemProperty 'file.encoding', 'UTF-8'
}

javafx {
    version = "19"
    modules = ['javafx.controls', 'javafx.fxml']
}

compileJava.options.encoding = 'UTF-8'

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}